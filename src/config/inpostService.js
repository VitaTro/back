const axios = require("axios");
require("dotenv").config();

async function getAllPoints() {
  let allPoints = [];
  let page = 1;
  let totalPages = 50; // –ú–æ–∂–Ω–∞ –∑–±—ñ–ª—å—à–∏—Ç–∏, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ

  try {
    while (page <= totalPages) {
      const response = await axios.get(
        `https://api-pl-points.easypack24.net/v1/points?page=${page}&per_page=100`,
        {
          headers: { Authorization: `Bearer ${process.env.INPOST_API_TOKEN}` },
        }
      );

      allPoints = [...allPoints, ...response.data.points];

      // üîπ –û–Ω–æ–≤–ª—é—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–æ—Ä—ñ–Ω–æ–∫ (–º–æ–∂–ª–∏–≤–æ –≤–æ–Ω–∞ –∑–º—ñ–Ω–∏—Ç—å—Å—è –ø—ñ—Å–ª—è –ø–µ—Ä—à–æ–≥–æ –∑–∞–ø–∏—Ç—É)
      if (page === 1) {
        totalPages = response.data.total_pages;
      }

      page++;
    }

    return allPoints;
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ API:", error.message);
    return [];
  }
}

async function trackShipment(trackingNumber) {
  try {
    const response = await axios.get(
      `https://api.inpost.pl/v1/shipments/${trackingNumber}`,
      {
        headers: { Authorization: `Bearer ${process.env.INPOST_API_TOKEN}` },
      }
    );
    return response.data;
  } catch (error) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞ –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –ø–æ—Å–∏–ª–∫–∏:", error.message);
    return null;
  }
}
module.exports = { getAllPoints, trackShipment };
