require("dotenv").config(); // –ø—ñ–¥—Ç—è–≥—É—î–º–æ .env

const mongoose = require("mongoose");
const OfflineSale = require("./src/schemas/sales/offlineSales"); // –∑–∞–º—ñ–Ω–∏ —à–ª—è—Ö, —è–∫—â–æ —ñ–Ω—à–∏–π
const OfflineSaleArchive = require("./src/schemas/sales/OfflineSaleArchive");

async function archiveOfflineSales() {
  try {
    const mongoUri = process.env.MONGO_URI;

    if (!mongoUri) {
      throw new Error("‚ùå MONGO_URI –Ω–µ –≤–∫–∞–∑–∞–Ω–æ –≤ .env —Ñ–∞–π–ª—ñ");
    }

    await mongoose.connect(mongoUri, { dbName: "nika" });
    console.log("‚úÖ –ü—ñ–¥–∫–ª—é—á–µ–Ω–æ –¥–æ MongoDB");

    const sales = await OfflineSale.find({});
    console.log(`üì¶ –ó–Ω–∞–π–¥–µ–Ω–æ ${sales.length} –∑–∞–ø–∏—Å—ñ–≤`);

    if (sales.length === 0) {
      console.log("‚ÑπÔ∏è –ù–µ–º–∞—î –¥–∞–Ω–∏—Ö –¥–ª—è –∞—Ä—Ö—ñ–≤–∞—Ü—ñ—ó");
      return;
    }

    await OfflineSaleArchive.insertMany(sales);
    console.log("üìÅ –£—Å–ø—ñ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–æ –≤ offlineSalesArchive");

    await OfflineSale.deleteMany({});
    console.log("üßπ –û—Å–Ω–æ–≤–Ω–∞ –∫–æ–ª–µ–∫—Ü—ñ—è –æ—á–∏—â–µ–Ω–∞");

    console.log(
      "üéâ –ì–æ—Ç–æ–≤–æ! –í—Å—ñ –æ—Ñ–ª–∞–π–Ω-–ø—Ä–æ–¥–∞–∂—ñ –∑–±–µ—Ä–µ–∂–µ–Ω–æ, —Å–∫–ª–∞–¥ —á–µ–∫–∞—î –Ω–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è"
    );
  } catch (error) {
    console.error("‚ùå –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞:", error);
  } finally {
    await mongoose.disconnect();
    console.log("üîå –ó'—î–¥–Ω–∞–Ω–Ω—è –∑ MongoDB –∑–∞–≤–µ—Ä—à–µ–Ω–æ");
  }
}

archiveOfflineSales();
