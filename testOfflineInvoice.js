require("dotenv").config();
require("./server");

const mongoose = require("mongoose");
const OfflineSale = require("./src/schemas/finance/offlineSales");
const generateUniversalInvoice = require("./src/services/generateUniversalInvoice");

(async () => {
  try {
    const saleId = "68553df93384d119cd585109"; // üëâ –≤—Å—Ç–∞–≤ –ø–æ—Ç—Ä—ñ–±–Ω–∏–π ID

    console.log("üì¶ –ü–æ—à—É–∫ –ø—Ä–æ–¥–∞–∂—É:", saleId);
    const sale = await OfflineSale.findById(saleId);

    if (!sale) {
      console.error("‚õî –ü—Ä–æ–¥–∞–∂ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ");
      process.exit(1);
    }

    const invoice = await generateUniversalInvoice(sale, {
      mode: "offline",
      buyerType: "anonim", // –∞–±–æ "przedsiƒôbiorca" + —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏
    });

    console.log("\n‚úÖ –§–∞–∫—Ç—É—Ä–∞ —Å—Ç–≤–æ—Ä–µ–Ω–∞!");
    console.log("üßæ –ù–æ–º–µ—Ä:", invoice.invoiceNumber);
    console.log("üì• PDF:", invoice.filePath);
    console.log("‚òÅÔ∏è fileUrl:", invoice.fileUrl || "(—â–µ –Ω–µ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–æ)");

    process.exit(0);
  } catch (err) {
    console.error("‚ùå –ü–æ–º–∏–ª–∫–∞:", err.message);
    process.exit(1);
  }
})();
